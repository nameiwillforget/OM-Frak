
(:patch
 (:name "rotate1")
 (:doc "")
 (:info
  (:created "2021/12/26 10:53:05")
  (:modified "2021/12/26 12:22:38")
  (:by "om-sharp")
  (:version 1.05))
 (:window (:size (627 572)) (:position (334 161)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :io)
   (:reference (:out (:type omout) (:name "out") (:index 1) (:doc "")))
   (:group-id nil)
   (:name "out")
   (:x 313)
   (:y 373)
   (:w 45)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 0))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 334)
   (:y 176)
   (:w 83)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :function)
   (:reference first-n)
   (:group-id nil)
   (:name "first-n")
   (:x 281)
   (:y 282)
   (:w 81)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 0) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :function)
   (:reference om-)
   (:group-id nil)
   (:name "om-")
   (:x 357)
   (:y 228)
   (:w 67)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value -1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :function)
   (:reference last-elem)
   (:group-id nil)
   (:name "last-elem")
   (:x 169)
   (:y 286)
   (:w 106)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :function)
   (:reference append)
   (:group-id nil)
   (:name "append")
   (:x 215)
   (:y 332)
   (:w 92)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "lists")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 1) (:name "in") (:doc "")))
   (:group-id nil)
   (:name "in")
   (:x 252)
   (:y 91)
   (:w 40)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 2 :in 0)))))