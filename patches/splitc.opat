
(:patch
 (:name "splitc")
 (:doc "")
 (:info
  (:created "2021/12/28 19:30:15")
  (:modified "2022/01/14 19:54:53")
  (:by "om-sharp")
  (:version 1.05))
 (:window (:size (413 336)) (:position (140 185)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 1) (:name "in") (:doc "")))
   (:group-id nil)
   (:name "in")
   (:x 147)
   (:y 5)
   (:w 40)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :io)
   (:reference (:out (:type omout) (:name "out") (:index 1) (:doc "")))
   (:group-id nil)
   (:name "out")
   (:x 68)
   (:y 231)
   (:w 45)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 1))
  (:box
   (:type :io)
   (:reference (:out (:type omout) (:name "out") (:index 2) (:doc "")))
   (:group-id nil)
   (:name "out")
   (:x 298)
   (:y 226)
   (:w 45)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 2))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 265)
   (:y 173)
   (:w 93)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :function)
   (:reference split)
   (:group-id nil)
   (:name "split")
   (:x 219)
   (:y 128)
   (:w 68)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 4))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 54)
   (:y 147)
   (:w 93)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :function)
   (:reference split)
   (:group-id nil)
   (:name "split")
   (:x 37)
   (:y 103)
   (:w 68)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 6)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 4 :out 1)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))))